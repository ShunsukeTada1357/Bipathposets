#This file is for Filtered Simplicial Complex with "Jump"
#We can consider, for example, 
#It allows simplices to emerge at the same time. It also simplicies not to emerge at the certain times. 
function whenbirthdaysFSC(FSC)
    n= FSC[2]
    days =[]
    dd = 0
    for i  in 1:n
        a = length(filter(x->x[2]==i,FSC[1]))
        dd = a +dd
        push!(days, dd)
    end
    #push!(days, dd+ FSC[2]-length(days))
    return days
end

function contractbirth(I,days)
    b = I[1]
    for i in 1:length(days)
        if b <= days[i]
            return i
        end
    end
    return length(days)
end

function contractdeath(I,FSC)
    d = I[2]+1
    if d> length(FSC[1])
        return FSC[2]
    else
        return FSC[1][d][2]-1
    end
end

function contractinterval(I, FSC)
    days =whenbirthdaysFSC(FSC)
    return [contractbirth(I,days), contractdeath(I,FSC)]
end





"""
function contractinterval(I, days)
    return [contractbirth(I,days), contractdeath_nnew(I,days)]
end


findall(x->x==last(days), days )
TC=[[[[1],1],[[2],1],[[3],1],[[4],1],[[1,2],3],[[2,4],3],[[1,3],4],[[3,4],6],[[1,4],6],[[1,3,4],6]] ,6]
TA=[[[[1],1],[[2],1],[[3],1],[[4],1],[[1,2],4],[[2,4],4],[[1,3],4],[[3,4],6],[[1,4],6],[[1,3,4],6],[[9],6] ,[[9],6]] ,9]
days = whenbirthdaysFSC(TA)
contractdeath_nnew([1,8],days)
contractdeath([1,11],days)

aa =findall(x->x==last(days), days )
days[minimum(aa)-1]
days
d = 10
last(days)
days[length(days)-1]
days[length(days)-1]<d <= last(days)
if days[length(days)-1]<d <= last(days)# "∞"
    #do nothing
    println( length(days)) #"∞"
end

#for i in 1:10
#a =contractinterval_new([4,i], days) 
#b =  contractinterval([4,i], days)
#println("when i =",i," ",a == b,":",a, b )
#end
#contractbirth_new(I,days)
maximum([1,2,3])
NA = [[[[1], 1], [[2], 1], [[3], 1], [[4], 1], [[5], 1], [[6], 1], [[7], 1], [[8], 1], [[9], 1], [[10], 1], [[11], 1], [[12], 1], [[13], 1], [[14], 1], [[15], 1], [[16], 1], [[17], 1], [[18], 1], [[19], 1], [[20], 1], [[21], 1], [[22], 1], [[23], 1], [[24], 1], [[5, 20], 1], [[5, 9], 1], [[6, 16], 1], [[9, 16], 1], [[4, 16], 1], [[13, 16], 1], [[15, 16], 1], [[10, 16], 1], [[19, 20], 1], [[20, 23], 1], [[12, 22], 1], [[9, 12], 1], [[12, 13], 1], [[10, 12], 1], [[11, 24], 1], [[4, 24], 1], [[13, 24], 1], [[15, 24], 1], [[18, 24], 1], [[8, 19], 1], [[7, 8], 1], [[8, 15], 1], [[2, 8], 1], [[11, 17], 1], [[17, 18], 1], [[1, 11], 1], [[9, 19], 1], [[14, 19], 1], [[13, 19], 1], [[2, 19], 1], [[3, 22], 1], [[9, 23], 1], [[14, 23], 1], [[13, 23], 1], [[10, 23], 1], [[3, 6], 1], [[6, 18], 1], [[2, 14], 1], [[10, 14], 1], [[7, 10], 1], [[7, 18], 1], [[4, 18], 1], [[13, 18], 1], [[15, 18], 1], [[4, 18, 24], 1], [[13, 18, 24], 1], [[15, 18, 24], 1], [[2, 8, 19], 1], [[2, 14, 19], 1], [[10, 14, 23], 1], [[8, 12], 2], [[11, 14], 2], [[14, 15], 3], [[8, 17], 6], [[15, 23], 6], [[14, 15, 23], 6], [[11, 18], 7], [[11, 18, 24], 7], [[11, 17, 18], 7], [[2, 17], 8], [[4, 14], 8], [[2, 8, 17], 8], [[11, 12], 9], [[6, 24], 9], [[1, 3], 9], [[1, 10], 9], [[6, 18, 24], 9], [[17, 24], 10], [[6, 23], 10], [[11, 17, 24], 10], [[17, 18, 24], 10], [[11, 17, 18, 24], 10], [[3, 13], 11], [[9, 24], 13], [[2, 7], 16], [[2, 7, 8], 16], [[15, 20], 17], [[15, 20, 23], 17], [[5, 13], 18], [[12, 15], 19], [[8, 12, 15], 19], [[3, 17], 21], [[14, 18], 21], [[11, 14, 18], 21], [[4, 14, 18], 21], [[14, 15, 18], 21]], 21]
length(NA[1])
NB = [[[[1], 1], [[2], 1], [[3], 1], [[4], 1], [[5], 1], [[6], 1], [[7], 1], [[8], 1], [[9], 1], [[10], 1], [[11], 1], [[12], 1], [[13], 1], [[14], 1], [[15], 1], [[16], 1], [[17], 1], [[18], 1], [[19], 1], [[20], 1], [[21], 1], [[22], 1], [[23], 1], [[24], 1], [[5, 20], 1], [[5, 9], 1], [[6, 16], 1], [[9, 16], 1], [[4, 16], 1], [[13, 16], 1], [[15, 16], 1], [[10, 16], 1], [[19, 20], 1], [[20, 23], 1], [[12, 22], 1], [[9, 12], 1], [[12, 13], 1], [[10, 12], 1], [[11, 24], 1], [[4, 24], 1], [[13, 24], 1], [[15, 24], 1], [[18, 24], 1], [[8, 19], 1], [[7, 8], 1], [[8, 15], 1], [[2, 8], 1], [[11, 17], 1], [[17, 18], 1], [[1, 11], 1], [[9, 19], 1], [[14, 19], 1], [[13, 19], 1], [[2, 19], 1], [[3, 22], 1], [[9, 23], 1], [[14, 23], 1], [[13, 23], 1], [[10, 23], 1], [[3, 6], 1], [[6, 18], 1], [[2, 14], 1], [[10, 14], 1], [[7, 10], 1], [[7, 18], 1], [[4, 18], 1], [[13, 18], 1], [[15, 18], 1], [[4, 18, 24], 1], [[13, 18, 24], 1], [[15, 18, 24], 1], [[2, 8, 19], 1], [[2, 14, 19], 1], [[10, 14, 23], 1], [[2, 7], 6], [[2, 7, 8], 6], [[15, 20], 7], [[5, 13], 8], [[3, 17], 11], [[14, 18], 11], [[8, 12], 12], [[11, 14], 12], [[14, 15], 13], [[14, 15, 18], 13], [[8, 17], 16], [[15, 23], 16], [[15, 20, 23], 16], [[14, 15, 23], 16], [[12, 15], 17], [[11, 18], 17], [[8, 12, 15], 17], [[11, 18, 24], 17], [[11, 17, 18], 17], [[11, 14, 18], 17], [[9, 24], 18], [[2, 17], 18], [[4, 14], 18], [[2, 8, 17], 18], [[4, 14, 18], 18], [[11, 12], 19], [[6, 24], 19], [[1, 3], 19], [[1, 10], 19], [[6, 18, 24], 19], [[17, 24], 20], [[6, 23], 20], [[11, 17, 24], 20], [[17, 18, 24], 20], [[11, 17, 18, 24], 20], [[3, 13], 21]], 21]
length(NA[1])
daysNA = whenbirthdaysFSC(NA)
daysNB = whenbirthdaysFSC(NB)
contractinterval([1,109], daysNB)
contractdeath_nnew([75,10], daysNB)

XXX = [[[1], 1], [[2], 1], [[3], 1], [[4], 1], [[5], 1], [[6], 1], [[7], 1], [[8], 1], [[9], 1], [[10], 1], [[11], 1], [[12], 1], [[13], 1], [[14], 1], [[15], 1], [[16], 1], [[17], 1], [[18], 1], [[19], 1], [[20], 1], [[21], 1], [[22], 1], [[23], 1], [[24], 1], [[5, 20], 1], [[5, 9], 1], [[6, 16], 1], [[9, 16], 1], [[4, 16], 1], [[13, 16], 1], [[15, 16], 1], [[10, 16], 1], [[19, 20], 1], [[20, 23], 1], [[12, 22], 1], [[9, 12], 1], [[12, 13], 1], [[10, 12], 1], [[11, 24], 1], [[4, 24], 1], [[13, 24], 1], [[15, 24], 1], [[18, 24], 1], [[8, 19], 1], [[7, 8], 1], [[8, 15], 1], [[2, 8], 1], [[11, 17], 1], [[17, 18], 1], [[1, 11], 1], [[9, 19], 1], [[14, 19], 1], [[13, 19], 1], [[2, 19], 1], [[3, 22], 1], [[9, 23], 1], [[14, 23], 1], [[13, 23], 1], [[10, 23], 1], [[3, 6], 1], [[6, 18], 1], [[2, 14], 1], [[10, 14], 1], [[7, 10], 1], [[7, 18], 1], [[4, 18], 1], [[13, 18], 1], [[15, 18], 1], [[4, 18, 24], 1], [[13, 18, 24], 1], [[15, 18, 24], 1], [[2, 8, 19], 1], [[2, 14, 19], 1], [[10, 14, 23], 1]]
"""

FSCa = [[[[1], 1], [[2], 1], [[3], 1], [[4], 1], [[5], 1], 
   [[4, 5], 1],   [[2, 4], 2],   [[1, 3], 5], [[2, 5], 5],[[2, 4, 5], 5]    ],5]

FSCb = [[ [[1], 1], [[2], 1], [[3], 1],  [[4], 1], [[5], 1], [[4, 5], 1], [[2, 5], 4],  [[2, 4], 5],  [[2, 4, 5], 5], [[1, 3], 5]  ], 5]
#findfirst(x-> x>= 8,days)-1
TA=[[[[1],1],[[2],1],[[3],1],[[4],1],[[1,2],4],[[2,4],4],[[1,3],4],[[3,4],6],[[1,4],6],[[1,3,4],6],[[9],6] ,[[9],6]] ,9]
days = whenbirthdaysFSC(FSCa)
contractbirth([5,2],days)
contractdeath([1,1],days)

FSCa = [[[[1], 1], [[2], 2],  [[3], 3], [[2,3], 4] ], 4]
FSCb = [[[[1], 1], [[3], 2],  [[2], 3], [[2,3], 4] ], 4]


FSCa = [[[[1], 1], [[2], 1], [[3], 1], [[4], 1], [[5], 1], 
   [[4, 5], 1],   [[2, 4], 2],   [[1, 3], 5], [[2, 5], 5],[[2, 4, 5], 5]    ], 5]
FSCb = [[ [[1], 1], [[2], 1], [[3], 1],  [[4], 1], [[5], 1], 
  [[4, 5], 1], [[2, 5], 4],  [[2, 4], 5],  [[2, 4, 5], 5], [[1, 3], 5]  ], 5]
